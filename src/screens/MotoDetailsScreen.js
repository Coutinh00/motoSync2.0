import React, { useState } from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';
import { Feather, MaterialCommunityIcons } from '@expo/vector-icons';

const MotoDetailsScreen = ({ route, navigation }) => {
  const { moto } = route.params;
  const [showDeleteModal, setShowDeleteModal] = useState(false);

  const handleDeleteMoto = () => {
    // Implementar lógica de exclusão aqui
    console.log('Delete moto:', moto.id);
    setShowDeleteModal(false);
    // Navegar de volta para a lista após excluir
    navigation.goBack();
  };

  const handleEditMoto = () => {
    // Implementar lógica de edição aqui
    console.log('Edit moto:', moto.id);
    // Navegar para a tela de edição, passando os dados da moto
    navigation.navigate('EditMoto', { moto: moto });
  };

  return (
    <ScrollView style={styles.container}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <Feather name=\"arrow-left\" size={24} color=\"black\" />\n        </TouchableOpacity>\n        <Text style={styles.headerTitle}>Detalhes da motocicleta</Text>\n        <TouchableOpacity onPress={handleEditMoto}>\n           <Feather name=\"edit\" size={24} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n
      {/* Moto Details */}\n      <View style={styles.detailsCard}>\n        <Text style={styles.detailTitle}>{moto.model}</Text>\n         <View style={styles.statusContainer}>\n           <Text style={[styles.motoStatus, moto.status === 'Prontas' && styles.statusProntas, moto.status === 'Dano Leve' && styles.statusDanoLeve, moto.status === 'Dano Grave' && styles.statusDanoGrave]}>{moto.status}</Text>\n        </View>\n        <Text style={styles.detailText}><Text style={styles.detailLabel}>Plate:</Text> {moto.plate}</Text>\n        <Text style={styles.detailText}><Text style={styles.detailLabel}>Chassi:</Text> {moto.chassis}</Text>\n        <Text style={styles.detailText}><Text style={styles.detailLabel}>RFID Tag:</Text> {moto.rfid}</Text>\n         {/* Adicionar mais detalhes conforme a imagem */}\n         <Text style={styles.detailText}><Text style={styles.detailLabel}>IOT Tag:</Text> IOT-2048</Text>\n         <Text style={styles.detailText}><Text style={styles.detailLabel}>Local:</Text> {moto.location}</Text>\n         <Text style={styles.detailText}><Text style={styles.detailLabel}>Filial:</Text> {moto.filial}</Text>\n
         <Text style={styles.notesTitle}>Notas atuais</Text>\n         <View style={styles.notesContainer}>\n            <Text style={styles.notesText}>Óleo trocado; rodízio de pneus agendado para a próxima semana.</Text>\n         </View>\n
         <Text style={styles.createdBy}>Criado por</Text>\n         <Text style={styles.createdByEmail}>lucas.andrade@moto.com</Text>\n         <Text style={styles.lastUpdated}>Última atualização</Text>\n         <Text style={styles.lastUpdatedDate}>12/04/2025 15:42</Text>\n      </View>\n
      {/* Action Buttons */}\n      <TouchableOpacity style={styles.editButton} onPress={handleEditMoto}>\n        <Text style={styles.editButtonText}>Editar moto</Text>\n      </TouchableOpacity>\n
      <TouchableOpacity style={styles.deleteButton} onPress={() => setShowDeleteModal(true)}>\n        <Text style={styles.deleteButtonText}>Excluir moto</Text>\n      </TouchableOpacity>\n
      {/* Delete Confirmation Modal */}\n      {showDeleteModal && (\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <MaterialCommunityIcons name=\"alert-circle-outline\" size={40} color=\"red\" style={styles.modalIcon} />\n            <Text style={styles.modalTitle}>Excluir motocicleta?</Text>\n            <Text style={styles.modalMessage}>Tem certeza de que deseja excluir esta motocicleta? Esta ação não pode ser desfeita.</Text>\n            <View style={styles.modalButtons}>\n              <TouchableOpacity style={styles.modalCancelButton} onPress={() => setShowDeleteModal(false)}>\n                <Text style={styles.modalButtonText}>Cancelar</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.modalDeleteButton} onPress={handleDeleteMoto}>\n                <Text style={[styles.modalButtonText, styles.modalDeleteButtonText]}>Excluir</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      )}\n    </ScrollView>\n  );
};\n
const styles = StyleSheet.create({
  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    paddingTop: 10,\n    marginBottom: 10,\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  detailsCard: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 20,\n  },\n  detailTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n   statusContainer: {\n     position: 'absolute',\n     top: 15,\n     right: 15,\n   },\n  motoStatus: {\n    paddingVertical: 2,\n    paddingHorizontal: 8,\n    borderRadius: 10,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n   statusProntas: {\n    backgroundColor: '#D4EDDA',\n    color: '#155724',\n  },\n  statusDanoLeve: {\n    backgroundColor: '#FFF3CD',\n    color: '#856404',\n  },\n  statusDanoGrave: {\n    backgroundColor: '#F8D7DA',\n    color: '#721C24',\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n  detailLabel: {\n    fontWeight: 'bold',\n  },\n  notesTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 15,\n    marginBottom: 5,\n  },\n   notesContainer: {\n     backgroundColor: '#f9f9f9',\n     borderRadius: 5,\n     padding: 10,\n     marginBottom: 15,\n   },\n  notesText: {\n    fontSize: 14,\n    color: 'gray',\n  },\n  createdBy: {\n     fontSize: 12,\n     color: 'gray',\n     marginTop: 10,\n  },\n   createdByEmail: {\n     fontSize: 14,\n     marginBottom: 5,\n   },\n  lastUpdated: {\n    fontSize: 12,\n    color: 'gray',\n    marginTop: 5,\n  },\n  lastUpdatedDate: {\n    fontSize: 14,\n  },\n  editButton: {\n    backgroundColor: '#007BFF',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  editButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  deleteButton: {\n    backgroundColor: '#DC3545',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  deleteButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  modalContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n    marginHorizontal: 20,\n  },\n   modalIcon: {\n     marginBottom: 10,\n   },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  modalMessage: {\n    fontSize: 16,\n    color: 'gray',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n  },\n   modalCancelButton: {\n     padding: 10,\n     borderRadius: 5,\n     minWidth: 100,\n     alignItems: 'center',\n     borderColor: '#ccc',\n     borderWidth: 1,\n   },\n   modalDeleteButton: {\n     backgroundColor: '#DC3545',\n     padding: 10,\n     borderRadius: 5,\n     minWidth: 100,\n     alignItems: 'center',\n     marginLeft: 10,\n   },\n   modalButtonText: {\n     fontSize: 16,\n     fontWeight: 'bold',\n     color: '#000',\n   },\n   modalDeleteButtonText: {\n     color: '#fff',\n   },\n});\n
export default MotoDetailsScreen; 